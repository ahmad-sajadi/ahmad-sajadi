- hosts: webservers
  become: yes
  gather_facts: false
  tasks:
  - name: "install alertmanager on a container"
    docker_container:
      name: alertmanager
      image: prom/alertmanager
      ports:
        - 9093:9093
      volumes:
        - /etc/alertmanager/:/etc/alertmanager/
      restart: true
      command:
        - '--config.file=/etc/alertmanager/alertmanager.yml'
        - '--storage.path=/alertmanager'

  - name: "install prometheus on a container"
    docker_container:
      name: prometheus
      image: prom/prometheus
      volumes:
        - /etc/prometheus/:/etc/prometheus/
        - prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - 9090:9090
      links:
        - "alertmanager:alertmanager"
      restart: true
    
  - name: "install node_exporter  on a container"
    docker_container:
      name: node-exporter
      image: prom/node-exporter
      volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /:/rootfs:ro
      command: 
        - '--path.procfs=/host/proc' 
        - '--path.sysfs=/host/sys'
        - --collector.filesystem.ignored-mount-points
        - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      ports:
        - 9100:9100
      restart: true
      
  - name: "install grafna on a container"
    docker_container: 
      name: grafana
      image: grafana/grafana
      user: "472"
      ports:
        - 3000:3000
      volumes:
        - grafana_data:/var/lib/grafana
        - ./grafana/provisioning/:/etc/grafana/provisioning/
      restart: true

  - name: "install nginx_exporter on a container"
    docker_container:
      name: nginx-exporter
      image: nginx/nginx-prometheus-exporter:0.10.0
      ports:
        - 9113:9113
      restart: true
      command: 
        - '-nginx.scrape-uri=http://200.100.100.207:8089/stub_status'

  - name: "install blackbox_exporter on a container"
    docker_container:
      name: blackbox-exporter
      image: prom/blackbox-exporter
      ports:
        - "9115:9115"
      restart: true

  - name: copy config files
    copy:
      src: ./prometheus.yml
      dest: /etc/prometheus/
      src: ./rules.yml
      dest: /etc/prometheus/
      src: ./alertmanager.yml
      dest: /etc/alertmanager/
  - name: restart prometheus and alertmanager containers after copy config files
    docker_container:
      name: prometheus
      state: started
      restart: yes
      name: alertmanager
      state: started
      restart: yes

  - name: Configure Docker for ubuntu stable repository
    apt_repository:
      repo: deb http://deb.debian.org/debian buster-backports main contrib non-free
      state: present
      update_cache: yes

  - name: install wireguard
    apt:
      state: present
      name:
       - wireguard

